# 백준 1946번

# 입력
# 첫째 줄에는 테스트 케이스의 개수 T
# 각 테스트 케이스의 첫째 줄에 지원자의 숫자 N
# 둘째 줄부터 N개 줄에는 각각의 지원자의 서류심사 성적, 면접 성적의 순위가 공백을 사이에 두고 한 줄에 주어진다.

# 출력
# 신입 사원의 최대 인원수 출력
# 예외 조건
# 1. 만약 서류, 면접 점수가 다른 사람에 비해 둘다 점수가 낮다면 탈락

# 로직

import sys
T = int(sys.stdin.readline())  # 테스트 케이스의 수를 입력받음

for _ in range(T):  # T번 반복하여 각 테스트 케이스 처리
    N = int(sys.stdin.readline())  # 각 테스트 케이스에서 N개의 지원자 정보를 입력받음
    arr = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]
    # 각 지원자의 서류심사와 면접 점수를 2차원 배열로 입력받음
    # 예: [[서류 점수, 면접 점수], [서류 점수, 면접 점수], ...]
    arr.sort()
      # 서류심사 점수를 기준으로 오름차순 정렬
    cnt = 1 
    # 첫 번째 지원자는 항상 뽑히므로 카운트를 1로 시작 
    max_ = arr[0][1]
    # 첫 번째 지원자의 면접 점수를 max_에 저장 (기준값 설정)
    # 두 번째 지원자부터 마지막 지원자까지 면접 점수를 비교하여 처리
    for i in range(1, N):  
        if max_ > arr[i][1]:  # 현재까지의 최고 면접 점수보다 더 높은 순위의 지원자를 찾으면
            cnt += 1  # 해당 지원자를 뽑는 카운트 증가
            max_ = arr[i][1]  # 새로운 기준으로 max_를 업데이트 (면접 점수 갱신)
    print(cnt)  # 각 테스트 케이스에 대해 뽑힌 지원자의 수를 출력
