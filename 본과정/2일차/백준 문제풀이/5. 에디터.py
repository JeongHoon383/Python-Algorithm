# 문제 분석
# 한 줄로 된 간단한 에디터를 구현하려고 한다. 편집기는 영어 소문자만을 기록할 수 있는 편집기
# 편집기에는 '커서'라는 것이 있는데, 커서는 문장의 맨 앞(첫 번째 문자의 왼쪽), 문장의 맨 뒤(마지막 문자의 오른쪽), 또는 문장 중간 임의의 곳(모든 연속된 두 문자 사이)에 위치할 수 있다.
# 길이가 L인 문자열이 현재 편집기에 입력되어 있으면, 커서가 위치할 수 있는 곳은 L+1가지 경우가 있다.
# 초기에 편집기에 입력되어 있는 문자열이 주어진다.
# 이후 입력한 명령어가 차례로 주어진다.
# 모든 명령어를 수행하고 난 후 편집기에 입력되어 있는 문자열을 구하는 프로그램을 작성
# 단, 명령어가 수행되기 전에 커서는 문장의 맨 뒤에 위치

# 로직
# 1. 초기 입력되어 있는 문자열을 입력 받는다.
# 2. 정수로 된 명령어의 개수를 받고 개수만큼 반복문을 돌려줌
# 3. 커서 생성 및 위치 설정, 초기 세팅은 문장의 맨 뒤에 위치
# 4. 명령어가 주어짐 2개의 문자열이 주어지는데 1개만 주어지는 경우도 있으므로 예외처리를 해줘야됨
# 5. 명령어에 맞춰서 값 출력

# 입력
# 첫째 줄에는 초기에 편집기에 입력되어 있는 문자열이 주어진다.
# 둘째 줄에는 입력할 명령어의 개수를 나타내는 정수 M이 주어진다.
# 셋째 줄부터 M개의 줄에 걸쳐 입력할 명령어가 순서대로 주어진다.

# 출력
# 모든 명령어를 수행하고 난 후 편집기에 입력되어 있는 문자열을 출력한다.

# 문제
# 커서를 어떻게 표현할지 모름 -> 커서의 이동을 append와 pop으로 설정, 
# 커서가 움직이는 것을 표현하기 위해 커서의 이동에 따른 문자열의 값을 다른 스택에 저장해줌
# 기존 스택에 다시 저장할때 reversed를 사용하여 추가
# why? pop으로 나올 경우 맨 끝에있는 요소가 순서대로 쌓이므로 뒤집어서 다시 넣어줘야됨

import sys

# 첫 번째 문자열을 입력받아 리스트로 변환
st1 = list(sys.stdin.readline().rstrip())  # 커서의 왼쪽에 있는 문자들을 저장할 스택
st2 = []  # 커서의 오른쪽에 있는 문자들을 저장할 스택

# 명령의 개수를 입력받아 for문을 그만큼 반복
for _ in range(int(sys.stdin.readline())):  # 명령의 수만큼 반복
    command = list(sys.stdin.readline().split())  # 명령어를 입력받아 리스트로 변환
    
    # 명령어가 'L'인 경우 (커서를 왼쪽으로 이동)
    if command[0] == 'L':
        if st1:  # st1에 문자가 있으면 (커서 왼쪽에 이동할 문자가 있을 때)
            st2.append(st1.pop())  # st1에서 pop하여 st2에 넣음 (커서를 왼쪽으로 이동시키는 효과)

    # 명령어가 'D'인 경우 (커서를 오른쪽으로 이동)
    elif command[0] == 'D':
        if st2:  # st2에 문자가 있으면 (커서 오른쪽에 이동할 문자가 있을 때)
            st1.append(st2.pop())  # st2에서 pop하여 st1에 넣음 (커서를 오른쪽으로 이동시키는 효과)

    # 명령어가 'B'인 경우 (커서 왼쪽의 문자 삭제)
    elif command[0] == 'B':
        if st1:  # st1에 문자가 있으면 (커서 왼쪽에 문자가 있을 때)
            st1.pop()  # st1에서 pop (커서 왼쪽의 문자 삭제)

    # 그 외의 경우, 즉 문자를 추가하는 경우 (명령어 'P'로 들어왔을 때)
    else:
        st1.append(command[1])  # 커서 왼쪽에 해당 문자를 추가

# 반복이 끝나면 st2에 있는 문자들을 거꾸로 뒤집어 st1에 추가
st1.extend(reversed(st2))  # st2의 문자를 뒤집어 st1에 추가 (커서 오른쪽에 있는 문자를 모두 왼쪽으로 병합)

# 최종적으로 리스트 st1을 문자열로 합쳐 출력
print(''.join(st1))  # st1 리스트의 문자들을 합쳐서 최종 문자열로 출력


# from collections import deque

# n = deque(input())
# m = int(input())
# cursor = 1
# n.append(cursor)
# # 커서를 어떻게 표현할까?, 초기에는 맨 뒤에 위치해 있어야함
# # 아무 값이나 넣어주고 마지막에 지우면 됨
# for _ in range(m):
#   command = input().rstrip().split(" ")
#   if(command[0] == "L"):
#     n[-1]
#     # 1을 한칸 옮겨야됨
